// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: proto/hydrology_control_service.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlType int32

const (
	ControlType_NONE       ControlType = 0
	ControlType_NORM       ControlType = 1
	ControlType_FLOODPLAIN ControlType = 2
	ControlType_ADVERSE    ControlType = 3
	ControlType_DANGEROUS  ControlType = 4
)

// Enum value maps for ControlType.
var (
	ControlType_name = map[int32]string{
		0: "NONE",
		1: "NORM",
		2: "FLOODPLAIN",
		3: "ADVERSE",
		4: "DANGEROUS",
	}
	ControlType_value = map[string]int32{
		"NONE":       0,
		"NORM":       1,
		"FLOODPLAIN": 2,
		"ADVERSE":    3,
		"DANGEROUS":  4,
	}
)

func (x ControlType) Enum() *ControlType {
	p := new(ControlType)
	*p = x
	return p
}

func (x ControlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_hydrology_control_service_proto_enumTypes[0].Descriptor()
}

func (ControlType) Type() protoreflect.EnumType {
	return &file_proto_hydrology_control_service_proto_enumTypes[0]
}

func (x ControlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlType.Descriptor instead.
func (ControlType) EnumDescriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{0}
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode  uint32                 `protobuf:"varint,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Type      ControlType            `protobuf:"varint,2,opt,name=type,proto3,enum=hydrologycontrol.ControlType" json:"type,omitempty"`
	DateStart *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_start,json=dateStart,proto3" json:"date_start,omitempty"`
	Value     uint32                 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *CreateRequest) GetType() ControlType {
	if x != nil {
		return x.Type
	}
	return ControlType_NONE
}

func (x *CreateRequest) GetDateStart() *timestamppb.Timestamp {
	if x != nil {
		return x.DateStart
	}
	return nil
}

func (x *CreateRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ControlValue `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateRequest) GetData() []*ControlValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode uint32      `protobuf:"varint,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Type     ControlType `protobuf:"varint,2,opt,name=type,proto3,enum=hydrologycontrol.ControlType" json:"type,omitempty"`
	Page     uint32      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetRequest) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *GetRequest) GetType() ControlType {
	if x != nil {
		return x.Type
	}
	return ControlType_NONE
}

func (x *GetRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    uint32          `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	MaxPage uint32          `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Data    []*ControlValue `protobuf:"bytes,3,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetResponse) GetMaxPage() uint32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *GetResponse) GetData() []*ControlValue {
	if x != nil {
		return x.Data
	}
	return nil
}

type CheckValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	PostCode uint32                 `protobuf:"varint,2,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Value    uint32                 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CheckValueRequest) Reset() {
	*x = CheckValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckValueRequest) ProtoMessage() {}

func (x *CheckValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckValueRequest.ProtoReflect.Descriptor instead.
func (*CheckValueRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{5}
}

func (x *CheckValueRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *CheckValueRequest) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *CheckValueRequest) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type CheckValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Excess uint32 `protobuf:"varint,1,opt,name=excess,proto3" json:"excess,omitempty"`
}

func (x *CheckValueResponse) Reset() {
	*x = CheckValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckValueResponse) ProtoMessage() {}

func (x *CheckValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckValueResponse.ProtoReflect.Descriptor instead.
func (*CheckValueResponse) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{6}
}

func (x *CheckValueResponse) GetExcess() uint32 {
	if x != nil {
		return x.Excess
	}
	return 0
}

type GetDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode uint32                 `protobuf:"varint,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Date     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *GetDateRequest) Reset() {
	*x = GetDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDateRequest) ProtoMessage() {}

func (x *GetDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDateRequest.ProtoReflect.Descriptor instead.
func (*GetDateRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetDateRequest) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *GetDateRequest) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

type GetDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *AllControlValues `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDateResponse) Reset() {
	*x = GetDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDateResponse) ProtoMessage() {}

func (x *GetDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDateResponse.ProtoReflect.Descriptor instead.
func (*GetDateResponse) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetDateResponse) GetData() *AllControlValues {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetIntervalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostCode  uint32                 `protobuf:"varint,1,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	StartDate *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
}

func (x *GetIntervalRequest) Reset() {
	*x = GetIntervalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalRequest) ProtoMessage() {}

func (x *GetIntervalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalRequest.ProtoReflect.Descriptor instead.
func (*GetIntervalRequest) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetIntervalRequest) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *GetIntervalRequest) GetStartDate() *timestamppb.Timestamp {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *GetIntervalRequest) GetEndDate() *timestamppb.Timestamp {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type GetIntervalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*AllControlValues `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetIntervalResponse) Reset() {
	*x = GetIntervalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIntervalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIntervalResponse) ProtoMessage() {}

func (x *GetIntervalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIntervalResponse.ProtoReflect.Descriptor instead.
func (*GetIntervalResponse) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetIntervalResponse) GetData() []*AllControlValues {
	if x != nil {
		return x.Data
	}
	return nil
}

type ControlValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PostCode  uint32                 `protobuf:"varint,2,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Type      ControlType            `protobuf:"varint,3,opt,name=type,proto3,enum=hydrologycontrol.ControlType" json:"type,omitempty"`
	DateStart *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=date_start,json=dateStart,proto3" json:"date_start,omitempty"`
	DateEnd   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=date_end,json=dateEnd,proto3" json:"date_end,omitempty"`
	Value     uint32                 `protobuf:"varint,6,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ControlValue) Reset() {
	*x = ControlValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlValue) ProtoMessage() {}

func (x *ControlValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlValue.ProtoReflect.Descriptor instead.
func (*ControlValue) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{11}
}

func (x *ControlValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ControlValue) GetPostCode() uint32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *ControlValue) GetType() ControlType {
	if x != nil {
		return x.Type
	}
	return ControlType_NONE
}

func (x *ControlValue) GetDateStart() *timestamppb.Timestamp {
	if x != nil {
		return x.DateStart
	}
	return nil
}

func (x *ControlValue) GetDateEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.DateEnd
	}
	return nil
}

func (x *ControlValue) GetValue() uint32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type AllControlValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Norm       uint32 `protobuf:"varint,1,opt,name=norm,proto3" json:"norm,omitempty"`
	Floodplain uint32 `protobuf:"varint,2,opt,name=floodplain,proto3" json:"floodplain,omitempty"`
	Adverse    uint32 `protobuf:"varint,3,opt,name=adverse,proto3" json:"adverse,omitempty"`
	Dangerous  uint32 `protobuf:"varint,4,opt,name=dangerous,proto3" json:"dangerous,omitempty"`
}

func (x *AllControlValues) Reset() {
	*x = AllControlValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_hydrology_control_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllControlValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllControlValues) ProtoMessage() {}

func (x *AllControlValues) ProtoReflect() protoreflect.Message {
	mi := &file_proto_hydrology_control_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllControlValues.ProtoReflect.Descriptor instead.
func (*AllControlValues) Descriptor() ([]byte, []int) {
	return file_proto_hydrology_control_service_proto_rawDescGZIP(), []int{12}
}

func (x *AllControlValues) GetNorm() uint32 {
	if x != nil {
		return x.Norm
	}
	return 0
}

func (x *AllControlValues) GetFloodplain() uint32 {
	if x != nil {
		return x.Floodplain
	}
	return 0
}

func (x *AllControlValues) GetAdverse() uint32 {
	if x != nil {
		return x.Adverse
	}
	return 0
}

func (x *AllControlValues) GetDangerous() uint32 {
	if x != nil {
		return x.Dangerous
	}
	return 0
}

var File_proto_hydrology_control_service_proto protoreflect.FileDescriptor

var file_proto_hydrology_control_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1f, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x43, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x70, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x22, 0x70, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x76, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2c, 0x0a, 0x12,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x65, 0x78, 0x63, 0x65, 0x73, 0x73, 0x22, 0x5d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xa3, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x22, 0x4d, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf6, 0x01, 0x0a, 0x0c, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x6e,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x07, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x7e, 0x0a, 0x10, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x72, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6e, 0x6f, 0x72, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6c,
	0x6f, 0x6f, 0x64, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a,
	0x66, 0x6c, 0x6f, 0x6f, 0x64, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f,
	0x75, 0x73, 0x2a, 0x4d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x4f, 0x52, 0x4d, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x4c, 0x4f, 0x4f, 0x44, 0x50, 0x4c,
	0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x44, 0x56, 0x45, 0x52, 0x53, 0x45,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x4f, 0x55, 0x53, 0x10,
	0x04, 0x32, 0xab, 0x04, 0x0a, 0x17, 0x48, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0a, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x12, 0x24, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x08, 0x5a, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_hydrology_control_service_proto_rawDescOnce sync.Once
	file_proto_hydrology_control_service_proto_rawDescData = file_proto_hydrology_control_service_proto_rawDesc
)

func file_proto_hydrology_control_service_proto_rawDescGZIP() []byte {
	file_proto_hydrology_control_service_proto_rawDescOnce.Do(func() {
		file_proto_hydrology_control_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_hydrology_control_service_proto_rawDescData)
	})
	return file_proto_hydrology_control_service_proto_rawDescData
}

var file_proto_hydrology_control_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_hydrology_control_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_hydrology_control_service_proto_goTypes = []interface{}{
	(ControlType)(0),              // 0: hydrologycontrol.ControlType
	(*CreateRequest)(nil),         // 1: hydrologycontrol.CreateRequest
	(*DeleteRequest)(nil),         // 2: hydrologycontrol.DeleteRequest
	(*UpdateRequest)(nil),         // 3: hydrologycontrol.UpdateRequest
	(*GetRequest)(nil),            // 4: hydrologycontrol.GetRequest
	(*GetResponse)(nil),           // 5: hydrologycontrol.GetResponse
	(*CheckValueRequest)(nil),     // 6: hydrologycontrol.CheckValueRequest
	(*CheckValueResponse)(nil),    // 7: hydrologycontrol.CheckValueResponse
	(*GetDateRequest)(nil),        // 8: hydrologycontrol.GetDateRequest
	(*GetDateResponse)(nil),       // 9: hydrologycontrol.GetDateResponse
	(*GetIntervalRequest)(nil),    // 10: hydrologycontrol.GetIntervalRequest
	(*GetIntervalResponse)(nil),   // 11: hydrologycontrol.GetIntervalResponse
	(*ControlValue)(nil),          // 12: hydrologycontrol.ControlValue
	(*AllControlValues)(nil),      // 13: hydrologycontrol.AllControlValues
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 15: google.protobuf.Empty
}
var file_proto_hydrology_control_service_proto_depIdxs = []int32{
	0,  // 0: hydrologycontrol.CreateRequest.type:type_name -> hydrologycontrol.ControlType
	14, // 1: hydrologycontrol.CreateRequest.date_start:type_name -> google.protobuf.Timestamp
	12, // 2: hydrologycontrol.UpdateRequest.data:type_name -> hydrologycontrol.ControlValue
	0,  // 3: hydrologycontrol.GetRequest.type:type_name -> hydrologycontrol.ControlType
	12, // 4: hydrologycontrol.GetResponse.data:type_name -> hydrologycontrol.ControlValue
	14, // 5: hydrologycontrol.CheckValueRequest.date:type_name -> google.protobuf.Timestamp
	14, // 6: hydrologycontrol.GetDateRequest.date:type_name -> google.protobuf.Timestamp
	13, // 7: hydrologycontrol.GetDateResponse.data:type_name -> hydrologycontrol.AllControlValues
	14, // 8: hydrologycontrol.GetIntervalRequest.start_date:type_name -> google.protobuf.Timestamp
	14, // 9: hydrologycontrol.GetIntervalRequest.end_date:type_name -> google.protobuf.Timestamp
	13, // 10: hydrologycontrol.GetIntervalResponse.data:type_name -> hydrologycontrol.AllControlValues
	0,  // 11: hydrologycontrol.ControlValue.type:type_name -> hydrologycontrol.ControlType
	14, // 12: hydrologycontrol.ControlValue.date_start:type_name -> google.protobuf.Timestamp
	14, // 13: hydrologycontrol.ControlValue.date_end:type_name -> google.protobuf.Timestamp
	1,  // 14: hydrologycontrol.HydrologyControlService.Create:input_type -> hydrologycontrol.CreateRequest
	2,  // 15: hydrologycontrol.HydrologyControlService.Delete:input_type -> hydrologycontrol.DeleteRequest
	3,  // 16: hydrologycontrol.HydrologyControlService.Update:input_type -> hydrologycontrol.UpdateRequest
	4,  // 17: hydrologycontrol.HydrologyControlService.Get:input_type -> hydrologycontrol.GetRequest
	6,  // 18: hydrologycontrol.HydrologyControlService.CheckValue:input_type -> hydrologycontrol.CheckValueRequest
	8,  // 19: hydrologycontrol.HydrologyControlService.GetDate:input_type -> hydrologycontrol.GetDateRequest
	10, // 20: hydrologycontrol.HydrologyControlService.GetInterval:input_type -> hydrologycontrol.GetIntervalRequest
	15, // 21: hydrologycontrol.HydrologyControlService.Create:output_type -> google.protobuf.Empty
	15, // 22: hydrologycontrol.HydrologyControlService.Delete:output_type -> google.protobuf.Empty
	15, // 23: hydrologycontrol.HydrologyControlService.Update:output_type -> google.protobuf.Empty
	5,  // 24: hydrologycontrol.HydrologyControlService.Get:output_type -> hydrologycontrol.GetResponse
	7,  // 25: hydrologycontrol.HydrologyControlService.CheckValue:output_type -> hydrologycontrol.CheckValueResponse
	9,  // 26: hydrologycontrol.HydrologyControlService.GetDate:output_type -> hydrologycontrol.GetDateResponse
	11, // 27: hydrologycontrol.HydrologyControlService.GetInterval:output_type -> hydrologycontrol.GetIntervalResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_hydrology_control_service_proto_init() }
func file_proto_hydrology_control_service_proto_init() {
	if File_proto_hydrology_control_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_hydrology_control_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIntervalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_hydrology_control_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllControlValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_hydrology_control_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_hydrology_control_service_proto_goTypes,
		DependencyIndexes: file_proto_hydrology_control_service_proto_depIdxs,
		EnumInfos:         file_proto_hydrology_control_service_proto_enumTypes,
		MessageInfos:      file_proto_hydrology_control_service_proto_msgTypes,
	}.Build()
	File_proto_hydrology_control_service_proto = out.File
	file_proto_hydrology_control_service_proto_rawDesc = nil
	file_proto_hydrology_control_service_proto_goTypes = nil
	file_proto_hydrology_control_service_proto_depIdxs = nil
}
